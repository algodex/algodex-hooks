name: CI
on:
  pull_request:
    branches: [ main, development, next ]
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install dependencies
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_PKG_READONLY }}" >> ~/.npmrc
          echo "@algodex:registry=https://npm.pkg.github.com" >> ~/.npmrc
          yarn
        env:
          NPM_AUTH_TOKEN: ${{ secrets.GH_PKG_READONLY }}
      - name: Lint Files
        run: yarn test-lint
  jest:
    name: Jest
    runs-on: ubuntu-latest
    needs: [ lint ]
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Install dependencies
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_PKG_READONLY }}" >> ~/.npmrc
          echo "@algodex:registry=https://npm.pkg.github.com" >> ~/.npmrc
          yarn
        env:
          NPM_AUTH_TOKEN: ${{ secrets.GH_PKG_READONLY }}
      - uses: paambaati/codeclimate-action@v2.2.4
        env:
          CC_TEST_REPORTER_ID: dc854e8893fe856fc6b3c7a467807e63cb96e239e9ad9a30ddd59c8c3f8b07f8
        with:
          coverageCommand: yarn coverage
  release:
    name: Release
    runs-on: ubuntu-latest
    if: (github.ref == 'refs/heads/main' &&  github.event_name != 'pull_request')
    needs: [ jest ]
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GH_TOKEN }}
      - name: Install dependencies
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GH_TOKEN }}" >> ~/.npmrc
          echo "@algodex:registry=https://npm.pkg.github.com" >> ~/.npmrc
          yarn
        env:
          NPM_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
      - name: Run Release
        run: yarn release
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
